import{S as f,i as l,a as L}from"./assets/vendor-Rdv7LHNr.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&a(n)}).observe(document,{childList:!0,subtree:!0});function i(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(e){if(e.ep)return;e.ep=!0;const o=i(e);fetch(e.href,o)}})();const $=new f(".gallery a",{captionsData:"alt",captionDelay:250});function p(t){const r=document.querySelector(".gallery"),i=t.map(({largeImageURL:a,webformatURL:e,tags:o,likes:n,views:h,comments:v,downloads:b})=>`
        <div class="image-card">
          <a href="${a}">
            <img src="${e}" alt="${o}" />
          </a>
          <div class="img-details">
            <div class="coms"><p>Likes</p> ${n}</div>
            <div class="coms"><p>Views</p> ${h}</div>
            <div class="coms"><p>Comments</p> ${v}</div>
            <div class="coms"><p>Downloads</p> ${b}</div>
          </div>
        </div>
      `).join("");r.insertAdjacentHTML("beforeend",i),$.refresh()}function g(t){l.error({title:"Error",message:t.message,position:"topRight",timeout:5e3})}new f(".gallery a",{captionsData:"alt",captionDelay:250});const w="46931303-4adba5c677ceeed1d52c819f0",S="https://pixabay.com/api/",q={image_type:"photo",orientation:"horizontal",safesearch:!0};async function y(t,r=1,i=20,a=q){const e=`${S}?key=${w}&q=${encodeURIComponent(t)}&page=${r}&per_page=${i}&image_type=${a.image_type}&orientation=${a.orientation}&safesearch=${a.safesearch}`;try{const{data:o}=await L.get(e);return o}catch{throw new Error("Failed to fetch images. Please try again later.")}}let c="",s=1,P=20;function d(t){const r=document.getElementById("loader");r.style.display=t?"block":"none"}function u(t){const r=document.querySelector(".load-more-btn");r.style.display=t?"block":"none"}const E=document.querySelector("#form"),m=document.querySelector(".load-more-btn");u(!1);E.addEventListener("submit",async t=>{if(t.preventDefault(),c=t.target.elements.query.value.trim(),s=1,document.querySelector(".gallery").innerHTML="",!c){d(!1),l.error({title:"Sorry,",message:"your search field is empty. Write something down, please!",position:"topRight",timeout:3e3});return}try{const r=await y(c,s);s>=r.totalHits/15?(m.disabled=!1,l.error({title:"Sorry,",message:"there are no images matching your search query. Please, try again!",position:"topRight",timeout:3e3})):(p(r.hits),d(!1),u(!0))}catch(r){g(r)}});m.addEventListener("click",async()=>{s+=1,u(!1),d(!0);try{const t=await y(c,s,P=15);p(t.hits),d(!1),s>=t.totalHits/15?(m.disabled=!1,l.info({title:"We're sorry,",message:"but you've reached the end of search results.",position:"topRight",timeout:3e3})):u(!0)}catch(t){g(t)}});
//# sourceMappingURL=index.js.map
